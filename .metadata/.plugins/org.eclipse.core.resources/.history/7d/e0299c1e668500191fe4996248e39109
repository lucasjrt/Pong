package br.facom.ufu.poo;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Panel;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;

import br.facom.ufu.poo.objetos.Bola;
import br.facom.ufu.poo.objetos.Jogador;

public class Pong extends Panel implements Runnable {
	private static final long serialVersionUID = 1L;

	// Constantes
	private final int FPS = 30;
	public static final Rectangle BLOCO_PEQUENO = new Rectangle(10, 30);
	public static final Rectangle BLOCO_MEDIO = new Rectangle(10, 50);
	public static final Rectangle BLOCO_GRANDE = new Rectangle(10, 70);

	public final int LARGURA_TELA;
	public final int ALTURA_TELA;

	private Thread thread;
	private Image img;
	private Graphics g;

	private Bola bola;
	private Jogador j;

	public Pong() {
		JFrame frame = new JFrame("Test");
		GraphicsDevice device = GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices()[0];
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setResizable(false);
		frame.add(this);
		frame.setUndecorated(true);
		frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
		device.setFullScreenWindow(frame);
		LARGURA_TELA = frame.getWidth();
		ALTURA_TELA = frame.getHeight();
		setSize(LARGURA_TELA, ALTURA_TELA);
		frame.setSize(LARGURA_TELA, ALTURA_TELA);
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);
		frame.addKeyListener(new KeyListener() {
			public void keyTyped(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyReleased(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyPressed(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}
		});
	}

	public void init() {
		bola = new Bola(10, 10);
		j = new Jogador(this, 0, new Rectangle(10, 525));
		img = createImage(LARGURA_TELA, ALTURA_TELA);
		g = img.getGraphics();
	}

	public void start() {
		thread = new Thread(this, "Game");
		thread.start();
	}

	public void stop() {
		thread.interrupt();
	}

	public void paint(Graphics g) {
		g.drawImage(img, 0, 0, LARGURA_TELA, ALTURA_TELA, this);
	}

	public void update(Graphics g) {
		paint(g);
	}

	@Override
	public void run() {
		int y1 = 0;
		int y2 = ALTURA_TELA;

		try {
			while (true) {
				g.setColor(Color.black);
				g.fillRect(0, 0, LARGURA_TELA, ALTURA_TELA);
				bola.draw(g);
				j.draw(g);
				g.drawLine(0, y1, LARGURA_TELA, y1);
				g.drawLine(0, ALTURA_TELA >> 1, LARGURA_TELA, ALTURA_TELA >> 1);
				g.drawLine(0, y2, LARGURA_TELA, y2);
				if (y1 == ALTURA_TELA >> 1) {
					y1 = 0;
					System.out.println("Setting y1 = 0");
				} else {
					System.out.println("Increasing y1:" + y1);
					y1++;
					System.out.println("New value: " + y1);
				}
				if (y2 == ALTURA_TELA >> 1) {
					y2 = ALTURA_TELA;
				} else {
					y2--;
				}
				System.out.println(y1 + ", " + y2);
				repaint();
				Thread.sleep((int) (1000 / FPS));
				// bloco.move(bloco.getX() + 1, bloco.getY() + 1);
			}
		} catch (InterruptedException ie) {
			System.err.print("Interrupted!\n" + ie);
		}
	}

	public static void main(String args[]) {
		Pong t = new Pong();
		t.init();
		t.start();
	}
}
